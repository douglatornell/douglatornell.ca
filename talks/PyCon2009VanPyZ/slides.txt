.. -*- coding: utf-8 -*-

=======================
 PyCon 2009 for VanPyZ
=======================

:Author: Doug Latornell <djl@douglatornell.ca>
:Date: 7 April 2009


PyCon #2 for Me
===============

Open Space and Lightening Talks were both better this year

Scheduled talks were better too:

* fewer, but better themed
* invited talks and panel dicussions

But, keynotes were a bit lame...

\... and there wasn't as much swag.

Videos of all talks at http://pycon.blip.tv


Highlights
==========

`Easy AI with Python`_ - Raymond Hettinger

* http://code.activestate.com/recipes/langs/python/

.. _Easy AI with Python: http://blip.tv/file/1947373


`Plugins etc.`_ - André Roberge

* Nice survey, see also 6 post series on `André's blog`_
* ``crunchy``: http://crunchy.sourceforge.net/

.. _Plugins etc.: http://blip.tv/file/1949302
.. _André's blog: http://aroberge.blogspot.com/


Testing, testing, and more testing...


Buzzzz
======

``Windmill``: http://getwindmill.com/

``Web2Py``: http://web2py.com/

Non-relational Databases - ``CouchDB``, ``Cassandra``

Multi- and Distributed Processing, Concurrency


Tutorials
=========

* Optimization - Mike Muller
* Coroutines & Concurrency - David Beazley
* Advanced Topics - Steve Holden
* Internet Programming - Wesley Chun


Optimization
============

Mike Muller

* Premature optimization is evil
* Need to measure before you optimize

  * ``pystone``, ``time.clock``, ``timeit``, ``cProfile``, ``pstats``,
    ``heapy``

* Algorithms and Data Structures

  * list comprehensions and generators
  * ``lists`` vs. ``sets`` and ``deques``

* Caching

  * deterministic, non-deterministic, ``memcached``

* ``Psyco``, ``NumPy`` arrays, ``multiprocessing``


Intro to Python Profiling
=========================

`Mike Fletcher's talk`_

.. _Mike Fletcher's talk: http://pycon.blip.tv/file/1957086/

* Optimization makes code harder to maintain
* < 1 in 100 chance of guessing which bits to optimize, so profile!
* Beware of Heisenberg effect
* Use scripted behaviour for repeatability
* Optimize carefully:

  * under source control
  * commit often
  * be willing to revert

* ``KCacheGrind``, ``RunSnakeRun``


Coroutines & Concurrency
========================

David Beazley

* http://dabeaz.com
* Generators (to excess)
* Python 2.5 (PEP-342) introduced send() method for generators, and
  yield as an expression
* Applications:

  * Pipelines
  * Event handling - XML parsing
  * Concurrency - a toy multiprocessing OS in Python


Advanced Topics
===============

Steve Holden

* String interpolation
* Iteration protocol
* Generators
* Descriptors and properties
* Metaclasses
* Decorators


Internet Programming
====================

Wesley Chun

* Sockets
* Internet clients
* ``CGI``
* ``Django``


Testing, Testing, Testing
=========================

* Teach Me Web Testing Open Space
* Testing in Python (TiP) BoF

  * ``Dingus``: http://vimeo.com/3949077
  * http://snakebite.org

* ``Windmill``, ``Selenium``, ``figleaf``, ``twill``
* Ned Batchelder's ``coverage`` talk
* Functional Testing Tools Panel
* ``nose`` and ``py.test``

..
  Local Variables:
  mode: auto-fill
  mode: rst
  End:
